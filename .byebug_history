exit
@user.password_hash
@user.password
@user
exit
exi
@password.password_hash
self.password_hash
password_hash
@password
@password = BCrypt::Password.create("12345")
@password
c
exit
current_user
session[:user_id]=nil
session[:user_id]
current_user
user
exit
@current_user
current_user
exit
current_user
logged_in?
session[:user_id] = @user.id
c
logged_in?
logged_in
current_user
session[:user_id] = @user.id
session[:user_id]
@user
exit
@current_user
@user.nil?
@user
if @user put "1" else put "2" end
@user
User.all
@user
if @user p 1 end
@user
@user == true
@user
c
@user
c
@user.errors.full_messages
!@user.errors.empty?
@user.errors.empty?
@user.errors
@user.save
@user
c
User.all
@user.save
p a
puts a
print a
p a
a
a = User.all
User.all
c
@user.save
User.all
@user.save
@user
c
@user.save
@user
all[0].email
all[0]["email"]
all[0][:email]
all[0].email
all[0].id
all[0]
all
all.each {|x| p x.id.to_s }
all.each {|x| p x.id }
all.each do |x|
all.count
all.inspect
p all
all
akk
all = [User.all]
all = User.all
User.id
User.all
User.a;;
User[1]
p User.all
User.all
User.a;;
@user
@user.save
exit
@user.id
session
@user
c
session[:user_emailc]
session[:user_email]
session[:user_emaild]
session[:user_ud]
session[:user_class]
session[:user]
session[:user].class
@user
@user.id
session[:user_id].class
session[:user_id].type
session[:user_id]
@user
exit
User.new(params[:user])
params
